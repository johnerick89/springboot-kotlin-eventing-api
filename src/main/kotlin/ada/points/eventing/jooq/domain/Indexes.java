/*
 * This file is generated by jOOQ.
 */
package ada.points.eventing.jooq.domain;


import ada.points.eventing.jooq.domain.tables.EventTypes;
import ada.points.eventing.jooq.domain.tables.Events;

import javax.annotation.processing.Generated;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables of the <code>test</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index EVENTS_EVENT_TYPE_ID = Indexes0.EVENTS_EVENT_TYPE_ID;
    public static final Index EVENTS_PRIMARY = Indexes0.EVENTS_PRIMARY;
    public static final Index EVENT_TYPES_PRIMARY = Indexes0.EVENT_TYPES_PRIMARY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index EVENTS_EVENT_TYPE_ID = Internal.createIndex("EVENT_TYPE_ID", Events.EVENTS, new OrderField[] { Events.EVENTS.EVENT_TYPE_ID }, false);
        public static Index EVENTS_PRIMARY = Internal.createIndex("PRIMARY", Events.EVENTS, new OrderField[] { Events.EVENTS.ID }, true);
        public static Index EVENT_TYPES_PRIMARY = Internal.createIndex("PRIMARY", EventTypes.EVENT_TYPES, new OrderField[] { EventTypes.EVENT_TYPES.ID }, true);
    }
}
